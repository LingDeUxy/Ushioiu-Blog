{"title":"系统架构演变","uid":"4d8037d4e1b16b3676d4b80209195ebc","slug":"系统架构发展","date":"2022-10-10T12:18:21.000Z","updated":"2023-07-06T07:03:23.739Z","comments":true,"path":"api/articles/系统架构发展.json","keywords":null,"cover":"/img/post/image-20230705191839467.png","content":"<h2 id=\"1-单体架构\"><a href=\"#1-单体架构\" class=\"headerlink\" title=\"1.单体架构\"></a>1.单体架构</h2><p>比如我们一开始写的ssm框架就是，从数据库访问层，业务逻辑层，控制层，从前端到后端都是一起开发的单体应用。</p>\n<p><img src=\"/img/post/image-20230705191839467.png\" alt=\"image-20230705191839467\"></p>\n<p><strong>优点：</strong>部署在一个节点上，维护方便，开发方便。</p>\n<p><strong>缺点：</strong>一处错可能导致应用出错，代码耦合性高，不方便扩展，不利于开发大项目</p>\n<h2 id=\"2-垂直应用架构\"><a href=\"#2-垂直应用架构\" class=\"headerlink\" title=\"2.垂直应用架构\"></a>2.垂直应用架构</h2><p>随着访问量的逐渐增大，单一应用只能依靠增加节点来应对，但是这时候会发现并不是所有的模块都会有比较大的访问量。</p>\n<p><img src=\"/img/post/image-20230705192251789.png\" alt=\"image-20230705192251789\"></p>\n<p><strong>优点：</strong>可以分担流量，解决并发问题，不同模块方便开发，扩展</p>\n<p><strong>缺点：</strong>代码重复度高，模块（应用）之间独立无法相互调用</p>\n<h2 id=\"3-分布式架构\"><a href=\"#3-分布式架构\" class=\"headerlink\" title=\"3.分布式架构\"></a>3.分布式架构</h2><p>在垂直应用的架构上，把重复的部分提取出来</p>\n<p><img src=\"/img/post/image-20230705193412510.png\" alt=\"image-20230705193412510\"></p>\n<p><strong>优点：</strong>提高代码复用（把公共功能提取，作为服务层）</p>\n<p><strong>缺点：</strong>系统之间耦合性变高，调用复杂，难维护</p>\n<h2 id=\"4-SOA架构\"><a href=\"#4-SOA架构\" class=\"headerlink\" title=\"4.SOA架构\"></a>4.SOA架构</h2><p>在分布式下，设想一下，服务越来越多，他们之间的调用关系是不是更加复杂？</p>\n<p>于是，资源调度和治理中心(SOA Service OrientedArchitecture，面向服务的架构)很关键</p>\n<p><img src=\"/img/post/image-20230705194453074.png\" alt=\"image-20230705194453074\"></p>\n<p>例如：当a功能需要b是，请求ESB，ESB寻找然后找到b，帮a的请求转发到b。</p>\n<p><strong>优点：</strong>注册中心管理服务调用关系</p>\n<p><strong>缺点：</strong>测试，部署，运维困难，依赖关系复杂，出错影响大</p>\n<h2 id=\"5-微服务\"><a href=\"#5-微服务\" class=\"headerlink\" title=\"5.微服务\"></a>5.微服务</h2><p>在SOA基础上，让SOA架构粒度更精细，目的就是为了让服务之间互不影响</p>\n<p><img src=\"/img/post/image-20230705195410322.png\" alt=\"image-20230705195410322\"></p>\n<p>比SOA粒度更精细，每个服务单独数据库</p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>服务原子化拆分，独立打包、部署和升级，保证每个微服务清晰的任务划分，利于扩展</li>\n<li>微服务之间采用Restful等轻量级http协议相互调用</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<ul>\n<li>开发成本高</li>\n</ul>\n","text":"1.单体架构比如我们一开始写的ssm框架就是，从数据库访问层，业务逻辑层，控制层，从前端到后端都是一起开发的单体应用。 优点：部署在一个节点上，维护方便，开发方便。 缺点：一处错可能导致应用出错，代码耦合性高，不方便扩展，不利于开发大项目 2.垂直应用架构随着访问量的逐渐增大，单...","link":"","photos":[],"count_time":{"symbolsCount":650,"symbolsTime":"1 mins."},"categories":[{"name":"java","slug":"java","count":7,"path":"api/categories/java.json"}],"tags":[{"name":"系统架构","slug":"系统架构","count":1,"path":"api/tags/系统架构.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%8D%95%E4%BD%93%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">1.单体架构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%9E%82%E7%9B%B4%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">2.垂直应用架构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%88%86%E5%B8%83%E5%BC%8F%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">3.分布式架构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-SOA%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">4.SOA架构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%BE%AE%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">5.微服务</span></a></li></ol>","author":{"name":"Ushioiu","slug":"blog-author","avatar":"/img/account/ikun.jpeg","link":"/","description":"重新整理搭建博客中...","socials":{"github":"https://github.com/LingDeUxy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_62219631","juejin":"https://juejin.cn/user/1621110612306008","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":null},"baidu":{"icon":"iconfont icon-baidu","link":null}}}},"mapped":true,"prev_post":{"title":"索引失效及解决方案","uid":"cf2530e605eef344277b43fda2e83990","slug":"索引失效及解决方案","date":"2022-11-09T02:18:21.000Z","updated":"2023-07-06T07:30:13.191Z","comments":true,"path":"api/articles/索引失效及解决方案.json","keywords":null,"cover":"https://tse1-mm.cn.bing.net/th/id/OIP-C.peU5b4iXsv9YM_os6ZD7CgAAAA?w=154&h=180&c=7&r=0&o=5&pid=1.7","text":"索引失效及解决方案失效原因&#x2F;场景 索引列不独立 使用了左模糊 使用 or 查询部分字段没有使用索引 字符串条件没有使用 ‘’ 不符合最左前缀原则的查询 索引字段没有添加 not null 约束 隐式转换导致索引失效 索引列不独立是指 被索引的这列不能是表达式的一部分，不...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"数据库","slug":"数据库","count":1,"path":"api/categories/数据库.json"}],"tags":[{"name":"索引失效","slug":"索引失效","count":1,"path":"api/tags/索引失效.json"}],"author":{"name":"Ushioiu","slug":"blog-author","avatar":"/img/account/ikun.jpeg","link":"/","description":"重新整理搭建博客中...","socials":{"github":"https://github.com/LingDeUxy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_62219631","juejin":"https://juejin.cn/user/1621110612306008","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":null},"baidu":{"icon":"iconfont icon-baidu","link":null}}}}},"next_post":{}}